---
- hosts: all
  name: deployment play
  user: ec2-user
  gather_facts: true
  vars:
    project_name: parity
    working_dir: "/tmp/files"
    grafana_user: "admin"
    grafana_password: "admin"
    prom_ip: "172.28.1.3"
    prom_port: 9090
    graf_port: 3000
  pre_tasks:
    # - name: prune images and containers
    #   docker_prune:
    #     containers: yes
    #     images: yes
  roles:
    - name: Deploy
  post_tasks:
    - name: "Wait for port {{graf_port}} to become open on the host, don't start checking for 10 seconds"
      wait_for:
        port: "{{graf_port}}"
        delay: 10
    - name: check that service is responding
      uri:
        url: "http://localhost:{{graf_port}}"
        return_content: yes
        status_code: 200,302
    - name: set up monitoring
      delegate_to: localhost
      block:
        - name: set up prometheus datasource
          grafana_datasource:
            name: "Prometheus"
            grafana_url: "http://{{ec2_public_dns_name | default(inventory_hostname)}}:{{graf_port}}"
            grafana_user: "{{grafana_user}}"
            grafana_password: "{{grafana_password}}"
            org_id: "1"
            ds_type: "prometheus"
            url: "http://{{prom_ip}}:{{prom_port}}"
        - name: parse dashboard content
          shell: echo "{\"dashboard\":$(cat ./roles/Deploy/files/monitor/grafana/polkadot-metrics.json),\"overwrite\":true}"
          register: dash
        - name: import grafana dashboard
          uri:
            url: "http://{{ec2_public_dns_name | default(inventory_hostname)}}:{{graf_port}}/api/dashboards/db"
            method: POST
            user: "{{grafana_user}}"
            password: "{{grafana_password}}"
            force_basic_auth: yes
            body_format: json
            body: "{{ dash.stdout }}"